{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/felipe/projects/test-react/node_modules/react-navigation/src/views/ResourceSavingSceneView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport withLifecyclePolyfill from 'react-lifecycles-compat';\nimport SceneView from \"./SceneView\";\nvar FAR_FAR_AWAY = 3000;\n\nvar ResourceSavingSceneView = function (_React$PureComponent) {\n  _inherits(ResourceSavingSceneView, _React$PureComponent);\n\n  var _super = _createSuper(ResourceSavingSceneView);\n\n  function ResourceSavingSceneView(props) {\n    var _this;\n\n    _classCallCheck(this, ResourceSavingSceneView);\n\n    _this = _super.call(this);\n\n    _this._mustAlwaysBeVisible = function () {\n      return _this.props.animationEnabled || _this.props.swipeEnabled;\n    };\n\n    _this.state = {\n      awake: props.lazy ? props.isFocused : true\n    };\n    return _this;\n  }\n\n  _createClass(ResourceSavingSceneView, [{\n    key: \"render\",\n    value: function render() {\n      var awake = this.state.awake;\n\n      var _this$props = this.props,\n          isFocused = _this$props.isFocused,\n          childNavigation = _this$props.childNavigation,\n          navigation = _this$props.navigation,\n          removeClippedSubviews = _this$props.removeClippedSubviews,\n          lazy = _this$props.lazy,\n          rest = _objectWithoutProperties(_this$props, [\"isFocused\", \"childNavigation\", \"navigation\", \"removeClippedSubviews\", \"lazy\"]);\n\n      return React.createElement(View, {\n        style: styles.container,\n        collapsable: false,\n        removeClippedSubviews: Platform.OS === 'android' ? removeClippedSubviews : !isFocused && removeClippedSubviews,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: this._mustAlwaysBeVisible() || isFocused ? styles.innerAttached : styles.innerDetached,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, awake ? React.createElement(SceneView, _extends({}, rest, {\n        navigation: childNavigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }\n      })) : null));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isFocused && !prevState.awake) {\n        return {\n          awake: true\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return ResourceSavingSceneView;\n}(React.PureComponent);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  innerAttached: {\n    flex: 1\n  },\n  innerDetached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});\nexport default withLifecyclePolyfill(ResourceSavingSceneView);","map":{"version":3,"sources":["/Users/felipe/projects/test-react/node_modules/react-navigation/src/views/ResourceSavingSceneView.js"],"names":["React","PropTypes","withLifecyclePolyfill","SceneView","FAR_FAR_AWAY","ResourceSavingSceneView","props","_mustAlwaysBeVisible","animationEnabled","swipeEnabled","state","awake","lazy","isFocused","childNavigation","navigation","removeClippedSubviews","rest","styles","container","Platform","OS","innerAttached","innerDetached","nextProps","prevState","PureComponent","StyleSheet","create","flex","overflow","top"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,OAAOC,SAAP;AAEA,IAAMC,YAAY,GAAG,IAArB;;IAEMC,uB;;;;;AACJ,mCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB;;AADiB,UAkDnBC,oBAlDmB,GAkDI,YAAM;AAC3B,aAAO,MAAKD,KAAL,CAAWE,gBAAX,IAA+B,MAAKF,KAAL,CAAWG,YAAjD;AACD,KApDkB;;AAGjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEL,KAAK,CAACM,IAAN,GAAaN,KAAK,CAACO,SAAnB,GAA+B;AAD3B,KAAb;AAHiB;AAMlB;;;;6BAUQ;AAAA,UACCF,KADD,GACW,KAAKD,KADhB,CACCC,KADD;;AAAA,wBASH,KAAKL,KATF;AAAA,UAGLO,SAHK,eAGLA,SAHK;AAAA,UAILC,eAJK,eAILA,eAJK;AAAA,UAKLC,UALK,eAKLA,UALK;AAAA,UAMLC,qBANK,eAMLA,qBANK;AAAA,UAOLJ,IAPK,eAOLA,IAPK;AAAA,UAQFK,IARE;;AAWP,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEC,MAAM,CAACC,SADhB;AAEE,QAAA,WAAW,EAAE,KAFf;AAGE,QAAA,qBAAqB,EACnBC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GACIL,qBADJ,GAEI,CAACH,SAAD,IAAcG,qBANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,oBAAC,IAAD;AACE,QAAA,KAAK,EACH,KAAKT,oBAAL,MAA+BM,SAA/B,GACIK,MAAM,CAACI,aADX,GAEIJ,MAAM,CAACK,aAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGZ,KAAK,GAAG,oBAAC,SAAD,eAAeM,IAAf;AAAqB,QAAA,UAAU,EAAEH,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH,GAA0D,IAPlE,CATF,CADF;AAqBD;;;6CAxC+BU,S,EAAWC,S,EAAW;AACpD,UAAID,SAAS,CAACX,SAAV,IAAuB,CAACY,SAAS,CAACd,KAAtC,EAA6C;AAC3C,eAAO;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAAP;AACD;;AAED,aAAO,IAAP;AACD;;;;EAfmCX,KAAK,CAAC0B,a;;AAwD5C,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADoB;AAK/BR,EAAAA,aAAa,EAAE;AACbO,IAAAA,IAAI,EAAE;AADO,GALgB;AAQ/BN,EAAAA,aAAa,EAAE;AACbM,IAAAA,IAAI,EAAE,CADO;AAEbE,IAAAA,GAAG,EAAE3B;AAFQ;AARgB,CAAlB,CAAf;AAcA,eAAeF,qBAAqB,CAACG,uBAAD,CAApC","sourcesContent":["import React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport PropTypes from 'prop-types';\nimport withLifecyclePolyfill from 'react-lifecycles-compat';\n\nimport SceneView from './SceneView';\n\nconst FAR_FAR_AWAY = 3000; // this should be big enough to move the whole view out of its container\n\nclass ResourceSavingSceneView extends React.PureComponent {\n  constructor(props) {\n    super();\n\n    this.state = {\n      awake: props.lazy ? props.isFocused : true,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.isFocused && !prevState.awake) {\n      return { awake: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const { awake } = this.state;\n    const {\n      isFocused,\n      childNavigation,\n      navigation,\n      removeClippedSubviews,\n      lazy,\n      ...rest\n    } = this.props;\n\n    return (\n      <View\n        style={styles.container}\n        collapsable={false}\n        removeClippedSubviews={\n          Platform.OS === 'android'\n            ? removeClippedSubviews\n            : !isFocused && removeClippedSubviews\n        }\n      >\n        <View\n          style={\n            this._mustAlwaysBeVisible() || isFocused\n              ? styles.innerAttached\n              : styles.innerDetached\n          }\n        >\n          {awake ? <SceneView {...rest} navigation={childNavigation} /> : null}\n        </View>\n      </View>\n    );\n  }\n\n  _mustAlwaysBeVisible = () => {\n    return this.props.animationEnabled || this.props.swipeEnabled;\n  };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  innerAttached: {\n    flex: 1,\n  },\n  innerDetached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n\nexport default withLifecyclePolyfill(ResourceSavingSceneView);\n"]},"metadata":{},"sourceType":"module"}