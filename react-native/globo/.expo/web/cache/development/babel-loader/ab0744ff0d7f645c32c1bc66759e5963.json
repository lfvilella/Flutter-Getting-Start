{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/felipe/projects/test-react/node_modules/react-navigation/src/withCachedChildNavigation.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport addNavigationHelpers from \"./addNavigationHelpers\";\nimport getChildEventSubscriber from \"./getChildEventSubscriber\";\nexport default function withCachedChildNavigation(Comp) {\n  var _class, _temp;\n\n  var displayName = Comp.displayName || Comp.name;\n  return _temp = _class = function (_React$PureComponent) {\n    _inherits(_class, _React$PureComponent);\n\n    var _super = _createSuper(_class);\n\n    function _class() {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this._childEventSubscribers = {};\n\n      _this._isRouteFocused = function (route) {\n        var state = _this.props.navigation.state;\n        var focusedRoute = state.routes[state.index];\n        return route === focusedRoute;\n      };\n\n      _this._updateNavigationProps = function (navigation) {\n        if (!_this._childNavigationProps) {\n          _this._childNavigationProps = {};\n        }\n\n        navigation.state.routes.forEach(function (route) {\n          var childNavigation = _this._childNavigationProps[route.key];\n\n          if (childNavigation && childNavigation.state === route) {\n            return;\n          }\n\n          if (!_this._childEventSubscribers[route.key]) {\n            _this._childEventSubscribers[route.key] = getChildEventSubscriber(navigation.addListener, route.key);\n          }\n\n          _this._childNavigationProps[route.key] = addNavigationHelpers({\n            dispatch: navigation.dispatch,\n            state: route,\n            isFocused: function isFocused() {\n              return _this._isRouteFocused(route);\n            },\n            addListener: _this._childEventSubscribers[route.key]\n          });\n        });\n      };\n\n      return _this;\n    }\n\n    _createClass(_class, [{\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        this._updateNavigationProps(this.props.navigation);\n      }\n    }, {\n      key: \"componentWillReceiveProps\",\n      value: function componentWillReceiveProps(nextProps) {\n        this._updateNavigationProps(nextProps.navigation);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        var _this2 = this;\n\n        var activeKeys = this.props.navigation.state.routes.map(function (route) {\n          return route.key;\n        });\n        Object.keys(this._childEventSubscribers).forEach(function (key) {\n          if (!activeKeys.includes(key)) {\n            delete _this2._childEventSubscribers[key];\n          }\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(Comp, _extends({}, this.props, {\n          childNavigationProps: this._childNavigationProps,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }\n        }));\n      }\n    }]);\n\n    return _class;\n  }(React.PureComponent), _class.displayName = \"withCachedChildNavigation(\" + displayName + \")\", _temp;\n}","map":{"version":3,"sources":["/Users/felipe/projects/test-react/node_modules/react-navigation/src/withCachedChildNavigation.js"],"names":["React","addNavigationHelpers","getChildEventSubscriber","withCachedChildNavigation","Comp","displayName","name","_childEventSubscribers","_isRouteFocused","route","state","props","navigation","focusedRoute","routes","index","_updateNavigationProps","_childNavigationProps","forEach","childNavigation","key","addListener","dispatch","isFocused","nextProps","activeKeys","map","Object","keys","includes","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport addNavigationHelpers from './addNavigationHelpers';\nimport getChildEventSubscriber from './getChildEventSubscriber';\n\n/**\n * HOC which caches the child navigation items.\n */\nexport default function withCachedChildNavigation(Comp) {\n  const displayName = Comp.displayName || Comp.name;\n  return class extends React.PureComponent {\n    static displayName = `withCachedChildNavigation(${displayName})`;\n\n    _childEventSubscribers = {};\n\n    componentWillMount() {\n      this._updateNavigationProps(this.props.navigation);\n    }\n\n    componentWillReceiveProps(nextProps) {\n      this._updateNavigationProps(nextProps.navigation);\n    }\n\n    componentDidUpdate() {\n      const activeKeys = this.props.navigation.state.routes.map(\n        route => route.key\n      );\n      Object.keys(this._childEventSubscribers).forEach(key => {\n        if (!activeKeys.includes(key)) {\n          delete this._childEventSubscribers[key];\n        }\n      });\n    }\n\n    _isRouteFocused = route => {\n      const { state } = this.props.navigation;\n      const focusedRoute = state.routes[state.index];\n      return route === focusedRoute;\n    };\n\n    _updateNavigationProps = navigation => {\n      // Update props for each child route\n      if (!this._childNavigationProps) {\n        this._childNavigationProps = {};\n      }\n      navigation.state.routes.forEach(route => {\n        const childNavigation = this._childNavigationProps[route.key];\n        if (childNavigation && childNavigation.state === route) {\n          return;\n        }\n\n        if (!this._childEventSubscribers[route.key]) {\n          this._childEventSubscribers[route.key] = getChildEventSubscriber(\n            navigation.addListener,\n            route.key\n          );\n        }\n\n        this._childNavigationProps[route.key] = addNavigationHelpers({\n          dispatch: navigation.dispatch,\n          state: route,\n          isFocused: () => this._isRouteFocused(route),\n          addListener: this._childEventSubscribers[route.key],\n        });\n      });\n    };\n\n    render() {\n      return (\n        <Comp\n          {...this.props}\n          childNavigationProps={this._childNavigationProps}\n        />\n      );\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}