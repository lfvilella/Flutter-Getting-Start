{"ast":null,"code":"var BACK = 'Navigation/BACK';\nvar INIT = 'Navigation/INIT';\nvar NAVIGATE = 'Navigation/NAVIGATE';\nvar POP = 'Navigation/POP';\nvar POP_TO_TOP = 'Navigation/POP_TO_TOP';\nvar PUSH = 'Navigation/PUSH';\nvar RESET = 'Navigation/RESET';\nvar REPLACE = 'Navigation/REPLACE';\nvar SET_PARAMS = 'Navigation/SET_PARAMS';\nvar URI = 'Navigation/URI';\nvar COMPLETE_TRANSITION = 'Navigation/COMPLETE_TRANSITION';\n\nvar createAction = function createAction(type, fn) {\n  fn.toString = function () {\n    return type;\n  };\n\n  return fn;\n};\n\nvar back = createAction(BACK, function () {\n  var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    type: BACK,\n    key: payload.key,\n    immediate: payload.immediate\n  };\n});\nvar init = createAction(INIT, function () {\n  var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = {\n    type: INIT\n  };\n\n  if (payload.params) {\n    action.params = payload.params;\n  }\n\n  return action;\n});\nvar navigate = createAction(NAVIGATE, function (payload) {\n  var action = {\n    type: NAVIGATE,\n    routeName: payload.routeName\n  };\n\n  if (payload.params) {\n    action.params = payload.params;\n  }\n\n  if (payload.action) {\n    action.action = payload.action;\n  }\n\n  if (payload.key) {\n    action.key = payload.key;\n  }\n\n  return action;\n});\nvar pop = createAction(POP, function (payload) {\n  return {\n    type: POP,\n    n: payload && payload.n,\n    immediate: payload && payload.immediate\n  };\n});\nvar popToTop = createAction(POP_TO_TOP, function (payload) {\n  return {\n    type: POP_TO_TOP,\n    immediate: payload && payload.immediate,\n    key: payload && payload.key\n  };\n});\nvar push = createAction(PUSH, function (payload) {\n  var action = {\n    type: PUSH,\n    routeName: payload.routeName\n  };\n\n  if (payload.params) {\n    action.params = payload.params;\n  }\n\n  if (payload.action) {\n    action.action = payload.action;\n  }\n\n  return action;\n});\nvar reset = createAction(RESET, function (payload) {\n  return {\n    type: RESET,\n    index: payload.index,\n    key: payload.key,\n    actions: payload.actions\n  };\n});\nvar replace = createAction(REPLACE, function (payload) {\n  return {\n    type: REPLACE,\n    key: payload.key,\n    newKey: payload.newKey,\n    params: payload.params,\n    action: payload.action,\n    routeName: payload.routeName,\n    immediate: payload.immediate\n  };\n});\nvar setParams = createAction(SET_PARAMS, function (payload) {\n  return {\n    type: SET_PARAMS,\n    key: payload.key,\n    params: payload.params\n  };\n});\nvar uri = createAction(URI, function (payload) {\n  return {\n    type: URI,\n    uri: payload.uri\n  };\n});\nvar completeTransition = createAction(COMPLETE_TRANSITION, function (payload) {\n  return {\n    type: COMPLETE_TRANSITION,\n    key: payload && payload.key\n  };\n});\nexport default {\n  BACK: BACK,\n  INIT: INIT,\n  NAVIGATE: NAVIGATE,\n  POP: POP,\n  POP_TO_TOP: POP_TO_TOP,\n  PUSH: PUSH,\n  RESET: RESET,\n  REPLACE: REPLACE,\n  SET_PARAMS: SET_PARAMS,\n  URI: URI,\n  COMPLETE_TRANSITION: COMPLETE_TRANSITION,\n  back: back,\n  init: init,\n  navigate: navigate,\n  pop: pop,\n  popToTop: popToTop,\n  push: push,\n  reset: reset,\n  replace: replace,\n  setParams: setParams,\n  uri: uri,\n  completeTransition: completeTransition\n};","map":{"version":3,"sources":["/Users/felipe/projects/test-react/node_modules/react-navigation/src/NavigationActions.js"],"names":["BACK","INIT","NAVIGATE","POP","POP_TO_TOP","PUSH","RESET","REPLACE","SET_PARAMS","URI","COMPLETE_TRANSITION","createAction","type","fn","toString","back","payload","key","immediate","init","action","params","navigate","routeName","pop","n","popToTop","push","reset","index","actions","replace","newKey","setParams","uri","completeTransition"],"mappings":"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","sourcesContent":["const BACK = 'Navigation/BACK';\nconst INIT = 'Navigation/INIT';\nconst NAVIGATE = 'Navigation/NAVIGATE';\nconst POP = 'Navigation/POP';\nconst POP_TO_TOP = 'Navigation/POP_TO_TOP';\nconst PUSH = 'Navigation/PUSH';\nconst RESET = 'Navigation/RESET';\nconst REPLACE = 'Navigation/REPLACE';\nconst SET_PARAMS = 'Navigation/SET_PARAMS';\nconst URI = 'Navigation/URI';\nconst COMPLETE_TRANSITION = 'Navigation/COMPLETE_TRANSITION';\n\nconst createAction = (type, fn) => {\n  fn.toString = () => type;\n  return fn;\n};\n\nconst back = createAction(BACK, (payload = {}) => ({\n  type: BACK,\n  key: payload.key,\n  immediate: payload.immediate,\n}));\n\nconst init = createAction(INIT, (payload = {}) => {\n  const action = {\n    type: INIT,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  return action;\n});\n\nconst navigate = createAction(NAVIGATE, payload => {\n  const action = {\n    type: NAVIGATE,\n    routeName: payload.routeName,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  if (payload.action) {\n    action.action = payload.action;\n  }\n  if (payload.key) {\n    action.key = payload.key;\n  }\n  return action;\n});\n\nconst pop = createAction(POP, payload => ({\n  type: POP,\n  n: payload && payload.n,\n  immediate: payload && payload.immediate,\n}));\n\nconst popToTop = createAction(POP_TO_TOP, payload => ({\n  type: POP_TO_TOP,\n  immediate: payload && payload.immediate,\n  key: payload && payload.key,\n}));\n\nconst push = createAction(PUSH, payload => {\n  const action = {\n    type: PUSH,\n    routeName: payload.routeName,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  if (payload.action) {\n    action.action = payload.action;\n  }\n  return action;\n});\n\nconst reset = createAction(RESET, payload => ({\n  type: RESET,\n  index: payload.index,\n  key: payload.key,\n  actions: payload.actions,\n}));\n\nconst replace = createAction(REPLACE, payload => ({\n  type: REPLACE,\n  key: payload.key,\n  newKey: payload.newKey,\n  params: payload.params,\n  action: payload.action,\n  routeName: payload.routeName,\n  immediate: payload.immediate,\n}));\n\nconst setParams = createAction(SET_PARAMS, payload => ({\n  type: SET_PARAMS,\n  key: payload.key,\n  params: payload.params,\n}));\n\nconst uri = createAction(URI, payload => ({\n  type: URI,\n  uri: payload.uri,\n}));\n\nconst completeTransition = createAction(COMPLETE_TRANSITION, payload => ({\n  type: COMPLETE_TRANSITION,\n  key: payload && payload.key,\n}));\n\nexport default {\n  // Action constants\n  BACK,\n  INIT,\n  NAVIGATE,\n  POP,\n  POP_TO_TOP,\n  PUSH,\n  RESET,\n  REPLACE,\n  SET_PARAMS,\n  URI,\n  COMPLETE_TRANSITION,\n\n  // Action creators\n  back,\n  init,\n  navigate,\n  pop,\n  popToTop,\n  push,\n  reset,\n  replace,\n  setParams,\n  uri,\n  completeTransition,\n};\n"]},"metadata":{},"sourceType":"module"}