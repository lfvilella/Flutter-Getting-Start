{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/felipe/projects/test-react/node_modules/react-navigation/src/views/Drawer/DrawerSidebar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from 'react-native-safe-area-view';\nimport withCachedChildNavigation from \"../../withCachedChildNavigation\";\nimport NavigationActions from \"../../NavigationActions\";\nimport invariant from \"../../utils/invariant\";\n\nvar DrawerSidebar = function (_React$PureComponent) {\n  _inherits(DrawerSidebar, _React$PureComponent);\n\n  var _super = _createSuper(DrawerSidebar);\n\n  function DrawerSidebar() {\n    var _this;\n\n    _classCallCheck(this, DrawerSidebar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._getScreenOptions = function (routeKey) {\n      var DrawerScreen = _this.props.router.getComponentForRouteName('DrawerClose');\n\n      invariant(DrawerScreen.router, 'NavigationComponent with routeName DrawerClose should be a Navigator');\n      var childNavigation = _this.props.childNavigationProps[routeKey];\n      return DrawerScreen.router.getScreenOptions(childNavigation.state.index !== undefined ? _objectSpread(_objectSpread({}, childNavigation), {}, {\n        state: _objectSpread(_objectSpread({}, childNavigation.state), {}, {\n          index: 0\n        })\n      }) : childNavigation, _this.props.screenProps);\n    };\n\n    _this._getLabel = function (_ref) {\n      var focused = _ref.focused,\n          tintColor = _ref.tintColor,\n          route = _ref.route;\n\n      var _this$_getScreenOptio = _this._getScreenOptions(route.key),\n          drawerLabel = _this$_getScreenOptio.drawerLabel,\n          title = _this$_getScreenOptio.title;\n\n      if (drawerLabel) {\n        return typeof drawerLabel === 'function' ? drawerLabel({\n          tintColor: tintColor,\n          focused: focused\n        }) : drawerLabel;\n      }\n\n      if (typeof title === 'string') {\n        return title;\n      }\n\n      return route.routeName;\n    };\n\n    _this._renderIcon = function (_ref2) {\n      var focused = _ref2.focused,\n          tintColor = _ref2.tintColor,\n          route = _ref2.route;\n\n      var _this$_getScreenOptio2 = _this._getScreenOptions(route.key),\n          drawerIcon = _this$_getScreenOptio2.drawerIcon;\n\n      if (drawerIcon) {\n        return typeof drawerIcon === 'function' ? drawerIcon({\n          tintColor: tintColor,\n          focused: focused\n        }) : drawerIcon;\n      }\n\n      return null;\n    };\n\n    _this._onItemPress = function (_ref3) {\n      var route = _ref3.route,\n          focused = _ref3.focused;\n\n      _this.props.navigation.navigate('DrawerClose');\n\n      if (!focused) {\n        var subAction;\n\n        if (route.index !== undefined && route.index !== 0) {\n          subAction = NavigationActions.reset({\n            index: 0,\n            actions: [NavigationActions.navigate({\n              routeName: route.routes[0].routeName\n            })]\n          });\n        }\n\n        _this.props.navigation.navigate(route.routeName, undefined, subAction);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(DrawerSidebar, [{\n    key: \"render\",\n    value: function render() {\n      var ContentComponent = this.props.contentComponent;\n\n      if (!ContentComponent) {\n        return null;\n      }\n\n      var state = this.props.navigation.state;\n      invariant(typeof state.index === 'number', 'should be set');\n      return React.createElement(View, {\n        style: [styles.container, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, React.createElement(ContentComponent, _extends({}, this.props.contentOptions, {\n        navigation: this.props.navigation,\n        items: state.routes,\n        activeItemKey: state.routes[state.index] ? state.routes[state.index].key : null,\n        screenProps: this.props.screenProps,\n        getLabel: this._getLabel,\n        renderIcon: this._renderIcon,\n        onItemPress: this._onItemPress,\n        router: this.props.router,\n        drawerPosition: this.props.drawerPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return DrawerSidebar;\n}(React.PureComponent);\n\nexport default withCachedChildNavigation(DrawerSidebar);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/felipe/projects/test-react/node_modules/react-navigation/src/views/Drawer/DrawerSidebar.js"],"names":["React","SafeAreaView","withCachedChildNavigation","NavigationActions","invariant","DrawerSidebar","_getScreenOptions","routeKey","DrawerScreen","props","router","getComponentForRouteName","childNavigation","childNavigationProps","getScreenOptions","state","index","undefined","screenProps","_getLabel","focused","tintColor","route","key","drawerLabel","title","routeName","_renderIcon","drawerIcon","_onItemPress","navigation","navigate","subAction","reset","actions","routes","ContentComponent","contentComponent","styles","container","style","contentOptions","drawerPosition","PureComponent","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport SafeAreaView from 'react-native-safe-area-view';\n\nimport withCachedChildNavigation from '../../withCachedChildNavigation';\nimport NavigationActions from '../../NavigationActions';\nimport invariant from '../../utils/invariant';\n\n/**\n * Component that renders the sidebar screen of the drawer.\n */\nclass DrawerSidebar extends React.PureComponent {\n  _getScreenOptions = routeKey => {\n    const DrawerScreen = this.props.router.getComponentForRouteName(\n      'DrawerClose'\n    );\n    invariant(\n      DrawerScreen.router,\n      'NavigationComponent with routeName DrawerClose should be a Navigator'\n    );\n    const { [routeKey]: childNavigation } = this.props.childNavigationProps;\n    return DrawerScreen.router.getScreenOptions(\n      childNavigation.state.index !== undefined // if the child screen is a StackRouter then always show the screen options of its first screen (see #1914)\n        ? {\n            ...childNavigation,\n            state: { ...childNavigation.state, index: 0 },\n          }\n        : childNavigation,\n      this.props.screenProps\n    );\n  };\n\n  _getLabel = ({ focused, tintColor, route }) => {\n    const { drawerLabel, title } = this._getScreenOptions(route.key);\n    if (drawerLabel) {\n      return typeof drawerLabel === 'function'\n        ? drawerLabel({ tintColor, focused })\n        : drawerLabel;\n    }\n\n    if (typeof title === 'string') {\n      return title;\n    }\n\n    return route.routeName;\n  };\n\n  _renderIcon = ({ focused, tintColor, route }) => {\n    const { drawerIcon } = this._getScreenOptions(route.key);\n    if (drawerIcon) {\n      return typeof drawerIcon === 'function'\n        ? drawerIcon({ tintColor, focused })\n        : drawerIcon;\n    }\n    return null;\n  };\n\n  _onItemPress = ({ route, focused }) => {\n    this.props.navigation.navigate('DrawerClose');\n    if (!focused) {\n      let subAction;\n      // if the child screen is a StackRouter then always navigate to its first screen (see #1914)\n      if (route.index !== undefined && route.index !== 0) {\n        subAction = NavigationActions.reset({\n          index: 0,\n          actions: [\n            NavigationActions.navigate({\n              routeName: route.routes[0].routeName,\n            }),\n          ],\n        });\n      }\n      this.props.navigation.navigate(route.routeName, undefined, subAction);\n    }\n  };\n\n  render() {\n    const ContentComponent = this.props.contentComponent;\n    if (!ContentComponent) {\n      return null;\n    }\n    const { state } = this.props.navigation;\n    invariant(typeof state.index === 'number', 'should be set');\n    return (\n      <View style={[styles.container, this.props.style]}>\n        <ContentComponent\n          {...this.props.contentOptions}\n          navigation={this.props.navigation}\n          items={state.routes}\n          activeItemKey={\n            state.routes[state.index] ? state.routes[state.index].key : null\n          }\n          screenProps={this.props.screenProps}\n          getLabel={this._getLabel}\n          renderIcon={this._renderIcon}\n          onItemPress={this._onItemPress}\n          router={this.props.router}\n          drawerPosition={this.props.drawerPosition}\n        />\n      </View>\n    );\n  }\n}\n\nexport default withCachedChildNavigation(DrawerSidebar);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}