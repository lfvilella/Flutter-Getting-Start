{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/felipe/projects/test-react/globo/app/sections/Menu.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport var Menu = function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu() {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.onPress = function () {\n      Alert.alert('You tapped the button!');\n    };\n\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.buttonRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.buttonStyles,\n        onPress: this.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, \"LESSONS\")), React.createElement(TouchableOpacity, {\n        style: styles.buttonStyles,\n        onPress: this.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, \"REGISTER\"))), React.createElement(View, {\n        style: styles.buttonRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.buttonStyles,\n        onPress: this.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, \"BLOG\")), React.createElement(TouchableOpacity, {\n        style: styles.buttonStyles,\n        onPress: function onPress() {\n          return _this2.props.navigate('ContactRT');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, \"CONTACT\"))), React.createElement(View, {\n        style: styles.buttonRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.buttonStyles,\n        onPress: this.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, \"QUIZ\")), React.createElement(TouchableOpacity, {\n        style: styles.buttonStyles,\n        onPress: this.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, \"ABOUT\"))));\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 6,\n    backgroundColor: Platform.OS === 'android' ? '#31e981' : '#35605a'\n  },\n  buttonRow: {\n    flex: 2,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderColor: '#ffffff',\n    borderBottomWidth: 1\n  },\n  buttonStyles: {\n    backgroundColor: Platform.OS === 'android' ? '#31e981' : '#35605a',\n    width: '50%',\n    height: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#ffffff',\n    fontSize: 18\n  }\n});","map":{"version":3,"sources":["/Users/felipe/projects/test-react/globo/app/sections/Menu.js"],"names":["React","Menu","onPress","Alert","alert","styles","container","buttonRow","buttonStyles","buttonText","props","navigate","Component","StyleSheet","create","flex","backgroundColor","Platform","OS","flexDirection","alignItems","borderColor","borderBottomWidth","width","height","justifyContent","color","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Alert, TouchableOpacity, Platform } from 'react-native';\n\n\nexport class Menu extends React.Component {\n  onPress = () => {\n    Alert.alert('You tapped the button!');\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.buttonRow}>\n          <TouchableOpacity style={styles.buttonStyles} onPress={this.onPress}>\n            <Text style={styles.buttonText}>LESSONS</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.buttonStyles} onPress={this.onPress}>\n            <Text style={styles.buttonText}>REGISTER</Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.buttonRow}>\n          <TouchableOpacity style={styles.buttonStyles} onPress={this.onPress}>\n            <Text style={styles.buttonText}>BLOG</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.buttonStyles} onPress={() => this.props.navigate('ContactRT')}>\n            <Text style={styles.buttonText}>CONTACT</Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.buttonRow}>\n          <TouchableOpacity style={styles.buttonStyles} onPress={this.onPress}>\n            <Text style={styles.buttonText}>QUIZ</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.buttonStyles} onPress={this.onPress}>\n            <Text style={styles.buttonText}>ABOUT</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 6,\n    backgroundColor: Platform.OS === 'android' ? '#31e981' : '#35605a',\n  },\n  buttonRow: {\n    flex: 2,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderColor: '#ffffff',\n    borderBottomWidth: 1,\n  },\n  buttonStyles: {\n    backgroundColor: Platform.OS === 'android' ? '#31e981' : '#35605a',\n    width: '50%',\n    height: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: '#ffffff',\n    fontSize: 18,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}