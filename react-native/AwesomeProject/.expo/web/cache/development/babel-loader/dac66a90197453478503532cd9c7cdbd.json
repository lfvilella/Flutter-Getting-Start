{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/felipe/projects/lucy-farm/AwesomeProject/node_modules/react-navigation/src/navigators/StackNavigator.js\";\nimport React from 'react';\nimport createNavigationContainer from \"../createNavigationContainer\";\nimport createNavigator from \"./createNavigator\";\nimport CardStackTransitioner from \"../views/CardStack/CardStackTransitioner\";\nimport StackRouter from \"../routers/StackRouter\";\nimport NavigationActions from \"../NavigationActions\";\nexport default (function (routeConfigMap) {\n  var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var initialRouteName = stackConfig.initialRouteName,\n      initialRouteParams = stackConfig.initialRouteParams,\n      paths = stackConfig.paths,\n      headerMode = stackConfig.headerMode,\n      headerTransitionPreset = stackConfig.headerTransitionPreset,\n      mode = stackConfig.mode,\n      cardStyle = stackConfig.cardStyle,\n      transitionConfig = stackConfig.transitionConfig,\n      onTransitionStart = stackConfig.onTransitionStart,\n      _onTransitionEnd = stackConfig.onTransitionEnd,\n      navigationOptions = stackConfig.navigationOptions;\n  var stackRouterConfig = {\n    initialRouteName: initialRouteName,\n    initialRouteParams: initialRouteParams,\n    paths: paths,\n    navigationOptions: navigationOptions\n  };\n  var router = StackRouter(routeConfigMap, stackRouterConfig);\n  var navigator = createNavigator(router, routeConfigMap, stackConfig)(function (props) {\n    return React.createElement(CardStackTransitioner, _extends({}, props, {\n      headerMode: headerMode,\n      headerTransitionPreset: headerTransitionPreset,\n      mode: mode,\n      cardStyle: cardStyle,\n      transitionConfig: transitionConfig,\n      onTransitionStart: onTransitionStart,\n      onTransitionEnd: function onTransitionEnd(lastTransition, transition) {\n        var _props$navigation = props.navigation,\n            state = _props$navigation.state,\n            dispatch = _props$navigation.dispatch;\n        dispatch(NavigationActions.completeTransition({\n          key: state.key\n        }));\n        _onTransitionEnd && _onTransitionEnd();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }));\n  });\n  return createNavigationContainer(navigator);\n});","map":{"version":3,"sources":["/Users/felipe/projects/lucy-farm/AwesomeProject/node_modules/react-navigation/src/navigators/StackNavigator.js"],"names":["React","createNavigationContainer","createNavigator","CardStackTransitioner","StackRouter","NavigationActions","routeConfigMap","stackConfig","initialRouteName","initialRouteParams","paths","headerMode","headerTransitionPreset","mode","cardStyle","transitionConfig","onTransitionStart","onTransitionEnd","navigationOptions","stackRouterConfig","router","navigator","props","lastTransition","transition","navigation","state","dispatch","completeTransition","key"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,yBAAP;AACA,OAAOC,eAAP;AACA,OAAOC,qBAAP;AACA,OAAOC,WAAP;AACA,OAAOC,iBAAP;AAMA,gBAAe,UAACC,cAAD,EAAsC;AAAA,MAArBC,WAAqB,uEAAP,EAAO;AAAA,MAEjDC,gBAFiD,GAa/CD,WAb+C,CAEjDC,gBAFiD;AAAA,MAGjDC,kBAHiD,GAa/CF,WAb+C,CAGjDE,kBAHiD;AAAA,MAIjDC,KAJiD,GAa/CH,WAb+C,CAIjDG,KAJiD;AAAA,MAKjDC,UALiD,GAa/CJ,WAb+C,CAKjDI,UALiD;AAAA,MAMjDC,sBANiD,GAa/CL,WAb+C,CAMjDK,sBANiD;AAAA,MAOjDC,IAPiD,GAa/CN,WAb+C,CAOjDM,IAPiD;AAAA,MAQjDC,SARiD,GAa/CP,WAb+C,CAQjDO,SARiD;AAAA,MASjDC,gBATiD,GAa/CR,WAb+C,CASjDQ,gBATiD;AAAA,MAUjDC,iBAViD,GAa/CT,WAb+C,CAUjDS,iBAViD;AAAA,MAWjDC,gBAXiD,GAa/CV,WAb+C,CAWjDU,eAXiD;AAAA,MAYjDC,iBAZiD,GAa/CX,WAb+C,CAYjDW,iBAZiD;AAenD,MAAMC,iBAAiB,GAAG;AACxBX,IAAAA,gBAAgB,EAAhBA,gBADwB;AAExBC,IAAAA,kBAAkB,EAAlBA,kBAFwB;AAGxBC,IAAAA,KAAK,EAALA,KAHwB;AAIxBQ,IAAAA,iBAAiB,EAAjBA;AAJwB,GAA1B;AAOA,MAAME,MAAM,GAAGhB,WAAW,CAACE,cAAD,EAAiBa,iBAAjB,CAA1B;AAGA,MAAME,SAAS,GAAGnB,eAAe,CAACkB,MAAD,EAASd,cAAT,EAAyBC,WAAzB,CAAf,CAChB,UAAAe,KAAK;AAAA,WACH,oBAAC,qBAAD,eACMA,KADN;AAEE,MAAA,UAAU,EAAEX,UAFd;AAGE,MAAA,sBAAsB,EAAEC,sBAH1B;AAIE,MAAA,IAAI,EAAEC,IAJR;AAKE,MAAA,SAAS,EAAEC,SALb;AAME,MAAA,gBAAgB,EAAEC,gBANpB;AAOE,MAAA,iBAAiB,EAAEC,iBAPrB;AAQE,MAAA,eAAe,EAAE,yBAACO,cAAD,EAAiBC,UAAjB,EAAgC;AAAA,gCACnBF,KAAK,CAACG,UADa;AAAA,YACvCC,KADuC,qBACvCA,KADuC;AAAA,YAChCC,QADgC,qBAChCA,QADgC;AAE/CA,QAAAA,QAAQ,CAACtB,iBAAiB,CAACuB,kBAAlB,CAAqC;AAAEC,UAAAA,GAAG,EAAEH,KAAK,CAACG;AAAb,SAArC,CAAD,CAAR;AACAZ,QAAAA,gBAAe,IAAIA,gBAAe,EAAlC;AACD,OAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADG;AAAA,GADW,CAAlB;AAmBA,SAAOhB,yBAAyB,CAACoB,SAAD,CAAhC;AACD,CA7CD","sourcesContent":["import React from 'react';\nimport createNavigationContainer from '../createNavigationContainer';\nimport createNavigator from './createNavigator';\nimport CardStackTransitioner from '../views/CardStack/CardStackTransitioner';\nimport StackRouter from '../routers/StackRouter';\nimport NavigationActions from '../NavigationActions';\n\n// A stack navigators props are the intersection between\n// the base navigator props (navgiation, screenProps, etc)\n// and the view's props\n\nexport default (routeConfigMap, stackConfig = {}) => {\n  const {\n    initialRouteName,\n    initialRouteParams,\n    paths,\n    headerMode,\n    headerTransitionPreset,\n    mode,\n    cardStyle,\n    transitionConfig,\n    onTransitionStart,\n    onTransitionEnd,\n    navigationOptions,\n  } = stackConfig;\n\n  const stackRouterConfig = {\n    initialRouteName,\n    initialRouteParams,\n    paths,\n    navigationOptions,\n  };\n\n  const router = StackRouter(routeConfigMap, stackRouterConfig);\n\n  // Create a navigator with CardStackTransitioner as the view\n  const navigator = createNavigator(router, routeConfigMap, stackConfig)(\n    props => (\n      <CardStackTransitioner\n        {...props}\n        headerMode={headerMode}\n        headerTransitionPreset={headerTransitionPreset}\n        mode={mode}\n        cardStyle={cardStyle}\n        transitionConfig={transitionConfig}\n        onTransitionStart={onTransitionStart}\n        onTransitionEnd={(lastTransition, transition) => {\n          const { state, dispatch } = props.navigation;\n          dispatch(NavigationActions.completeTransition({ key: state.key }));\n          onTransitionEnd && onTransitionEnd();\n        }}\n      />\n    )\n  );\n\n  return createNavigationContainer(navigator);\n};\n"]},"metadata":{},"sourceType":"module"}