{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/felipe/projects/lucy-farm/AwesomeProject/node_modules/react-native-tab-view/src/TabViewPagerAndroid.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPagerAndroid from \"react-native-web/dist/exports/ViewPagerAndroid\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { PagerRendererPropType } from \"./TabViewPropTypes\";\n\nvar TabViewPagerAndroid = function (_React$Component) {\n  _inherits(TabViewPagerAndroid, _React$Component);\n\n  var _super = _createSuper(TabViewPagerAndroid);\n\n  function TabViewPagerAndroid(props) {\n    var _this;\n\n    _classCallCheck(this, TabViewPagerAndroid);\n\n    _this = _super.call(this, props);\n    _this._isIdle = true;\n    _this._currentIndex = 0;\n\n    _this._getPageIndex = function (index) {\n      return I18nManager.isRTL ? _this.props.navigationState.routes.length - (index + 1) : index;\n    };\n\n    _this._setPage = function (index) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var pager = _this._viewPager;\n\n      if (pager) {\n        var page = _this._getPageIndex(index);\n\n        if (_this.props.animationEnabled === false || animated === false) {\n          pager.setPageWithoutAnimation(page);\n        } else {\n          pager.setPage(page);\n        }\n      }\n    };\n\n    _this._handlePageChange = function (index) {\n      if (_this._isIdle && _this._currentIndex !== index) {\n        _this._setPage(index);\n\n        _this._currentIndex = index;\n      }\n    };\n\n    _this._handlePageScroll = function (e) {\n      _this.props.offsetX.setValue(e.nativeEvent.position * _this.props.layout.width * (I18nManager.isRTL ? 1 : -1));\n\n      _this.props.panX.setValue(e.nativeEvent.offset * _this.props.layout.width * (I18nManager.isRTL ? 1 : -1));\n    };\n\n    _this._handlePageScrollStateChanged = function (e) {\n      _this._isIdle = e === 'idle';\n      var nextIndex = _this._currentIndex;\n\n      if (_this.props.canJumpToTab(_this.props.navigationState.routes[nextIndex])) {\n        _this.props.jumpToIndex(nextIndex);\n      } else {\n        _this._setPage(_this.props.navigationState.index);\n\n        _this._currentIndex = _this.props.navigationState.index;\n      }\n    };\n\n    _this._handlePageSelected = function (e) {\n      var index = _this._getPageIndex(e.nativeEvent.position);\n\n      _this._currentIndex = index;\n    };\n\n    _this._setRef = function (el) {\n      return _this._viewPager = el;\n    };\n\n    _this._currentIndex = _this.props.navigationState.index;\n    return _this;\n  }\n\n  _createClass(TabViewPagerAndroid, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.layout !== prevProps.layout || this.props.navigationState.routes.length !== prevProps.navigationState.routes.length || this.props.navigationState.index !== prevProps.navigationState.index) {\n        this._handlePageChange(this.props.navigationState.index);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          navigationState = _this$props.navigationState,\n          swipeEnabled = _this$props.swipeEnabled;\n      var content = React.Children.map(children, function (child, i) {\n        return React.createElement(View, {\n          key: navigationState.routes[i].key,\n          testID: navigationState.routes[i].testID,\n          style: styles.page,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 7\n          }\n        }, child);\n      });\n\n      if (I18nManager.isRTL) {\n        content.reverse();\n      }\n\n      var initialPage = this._getPageIndex(navigationState.index);\n\n      return React.createElement(ViewPagerAndroid, {\n        key: navigationState.routes.length,\n        keyboardDismissMode: \"on-drag\",\n        initialPage: initialPage,\n        scrollEnabled: swipeEnabled !== false,\n        onPageScroll: this._handlePageScroll,\n        onPageScrollStateChanged: this._handlePageScrollStateChanged,\n        onPageSelected: this._handlePageSelected,\n        style: styles.container,\n        ref: this._setRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }\n      }, content);\n    }\n  }]);\n\n  return TabViewPagerAndroid;\n}(React.Component);\n\nTabViewPagerAndroid.propTypes = PagerRendererPropType;\nTabViewPagerAndroid.defaultProps = {\n  canJumpToTab: function canJumpToTab() {\n    return true;\n  }\n};\nexport { TabViewPagerAndroid as default };\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 1\n  },\n  page: {\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["/Users/felipe/projects/lucy-farm/AwesomeProject/node_modules/react-native-tab-view/src/TabViewPagerAndroid.js"],"names":["React","PagerRendererPropType","TabViewPagerAndroid","props","_isIdle","_currentIndex","_getPageIndex","index","I18nManager","isRTL","navigationState","routes","length","_setPage","animated","pager","_viewPager","page","animationEnabled","setPageWithoutAnimation","setPage","_handlePageChange","_handlePageScroll","e","offsetX","setValue","nativeEvent","position","layout","width","panX","offset","_handlePageScrollStateChanged","nextIndex","canJumpToTab","jumpToIndex","_handlePageSelected","_setRef","el","prevProps","children","swipeEnabled","content","Children","map","child","i","key","testID","styles","reverse","initialPage","container","Component","propTypes","defaultProps","StyleSheet","create","flexGrow","overflow"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { View, ViewPagerAndroid, StyleSheet, I18nManager } from 'react-native';\nimport { PagerRendererPropType } from './TabViewPropTypes';\nimport type { PagerRendererProps } from './TabViewTypeDefinitions';\n\ntype PageScrollEvent = {\n  nativeEvent: {\n    position: number,\n    offset: number,\n  },\n};\n\ntype PageScrollState = 'dragging' | 'settling' | 'idle';\n\ntype Props<T> = PagerRendererProps<T>;\n\nexport default class TabViewPagerAndroid<T: *> extends React.Component<\n  Props<T>\n> {\n  static propTypes = PagerRendererPropType;\n\n  static defaultProps = {\n    canJumpToTab: () => true,\n  };\n\n  constructor(props: Props<T>) {\n    super(props);\n    this._currentIndex = this.props.navigationState.index;\n  }\n\n  componentDidUpdate(prevProps: Props<T>) {\n    if (\n      this.props.layout !== prevProps.layout ||\n      this.props.navigationState.routes.length !==\n        prevProps.navigationState.routes.length ||\n      this.props.navigationState.index !== prevProps.navigationState.index\n    ) {\n      this._handlePageChange(this.props.navigationState.index);\n    }\n  }\n\n  _pageChangeCallabck: any;\n  _viewPager: ?ViewPagerAndroid;\n  _isIdle: boolean = true;\n  _currentIndex = 0;\n\n  _getPageIndex = (index: number) =>\n    I18nManager.isRTL\n      ? this.props.navigationState.routes.length - (index + 1)\n      : index;\n\n  _setPage = (index: number, animated = true) => {\n    const pager = this._viewPager;\n\n    if (pager) {\n      const page = this._getPageIndex(index);\n\n      if (this.props.animationEnabled === false || animated === false) {\n        pager.setPageWithoutAnimation(page);\n      } else {\n        pager.setPage(page);\n      }\n    }\n  };\n\n  _handlePageChange = (index: number) => {\n    if (this._isIdle && this._currentIndex !== index) {\n      this._setPage(index);\n      this._currentIndex = index;\n    }\n  };\n\n  _handlePageScroll = (e: PageScrollEvent) => {\n    this.props.offsetX.setValue(\n      e.nativeEvent.position *\n        this.props.layout.width *\n        (I18nManager.isRTL ? 1 : -1)\n    );\n    this.props.panX.setValue(\n      e.nativeEvent.offset *\n        this.props.layout.width *\n        (I18nManager.isRTL ? 1 : -1)\n    );\n  };\n\n  _handlePageScrollStateChanged = (e: PageScrollState) => {\n    this._isIdle = e === 'idle';\n\n    let nextIndex = this._currentIndex;\n\n    if (this.props.canJumpToTab(this.props.navigationState.routes[nextIndex])) {\n      this.props.jumpToIndex(nextIndex);\n    } else {\n      this._setPage(this.props.navigationState.index);\n      this._currentIndex = this.props.navigationState.index;\n    }\n  };\n\n  _handlePageSelected = (e: PageScrollEvent) => {\n    const index = this._getPageIndex(e.nativeEvent.position);\n    this._currentIndex = index;\n  };\n\n  _setRef = (el: ?ViewPagerAndroid) => (this._viewPager = el);\n\n  render() {\n    const { children, navigationState, swipeEnabled } = this.props;\n    const content = React.Children.map(children, (child, i) => (\n      <View\n        key={navigationState.routes[i].key}\n        testID={navigationState.routes[i].testID}\n        style={styles.page}\n      >\n        {child}\n      </View>\n    ));\n\n    if (I18nManager.isRTL) {\n      content.reverse();\n    }\n\n    const initialPage = this._getPageIndex(navigationState.index);\n\n    return (\n      <ViewPagerAndroid\n        key={navigationState.routes.length}\n        keyboardDismissMode=\"on-drag\"\n        initialPage={initialPage}\n        scrollEnabled={swipeEnabled !== false}\n        onPageScroll={this._handlePageScroll}\n        onPageScrollStateChanged={this._handlePageScrollStateChanged}\n        onPageSelected={this._handlePageSelected}\n        style={styles.container}\n        ref={this._setRef}\n      >\n        {content}\n      </ViewPagerAndroid>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n  },\n\n  page: {\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}